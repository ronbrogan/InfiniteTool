<Window x:Class="InfiniteTool.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:InfiniteTool"
        xmlns:wpfutil="clr-namespace:InfiniteTool.WPF"
        xmlns:game="clr-namespace:InfiniteTool.GameInterop"
        mc:Ignorable="d"
        Title="Infinite Tool" Height="444" Width="671">

    <Window.Resources>
        <wpfutil:HexValConverter x:Key="HexValConverter"></wpfutil:HexValConverter>
    </Window.Resources>
    
    <DockPanel Margin="0,0,0,0">
        <Menu DockPanel.Dock="Top">
            <MenuItem Header="File">
                <MenuItem Header="Open Log Location" Click="openLogLocation_Click"></MenuItem>
            </MenuItem>

            <MenuItem Header="About" Click="aboutMenu_Click"></MenuItem>
        </Menu>
        <StatusBar  DockPanel.Dock="Bottom">
            <StatusBarItem>
                <TextBlock>
                    <TextBlock.Text>
                        <MultiBinding StringFormat="{}PID: {0}">
                            <Binding Path="Instance.ProcessId" Mode="OneWay" />
                        </MultiBinding>
                    </TextBlock.Text>
                </TextBlock>
            </StatusBarItem>
        </StatusBar>
        <TabControl VerticalAlignment="Stretch" HorizontalAlignment="Stretch">
            <TabItem Header="Checkpoints">
                <DockPanel>
                    <StackPanel Orientation="Horizontal" DockPanel.Dock="Top">
                        <Button x:Name="bindable_cp" Content="Checkpoint" HorizontalAlignment="Center" Margin="3" Click="cp_Click"/>
                        <Button x:Name="bindable_revert" Content="Revert"  HorizontalAlignment="Center" Margin="3" Click="revert_Click"/>
                        <!--<Button x:Name="bindable_keepCheckpoint" Content="Keep CP"  HorizontalAlignment="Center" Margin="3" Click="keepCp_Click"/>-->
                        <Button x:Name="bindable_toggleCheckpointSuppression" Content="Suppress CPs"  HorizontalAlignment="Center" Margin="3" Click="suppressCp_Click"/>
                    </StackPanel>
                    <!--<StackPanel Orientation="Horizontal" DockPanel.Dock="Bottom">
                        <Button x:Name="saveCp" Content="Save As" HorizontalAlignment="Center" Margin="3" Click="saveCp_Click" />
                        <Button x:Name="loadCp" Content="Load From File" HorizontalAlignment="Center" Margin="3" Click="loadCp_Click" />
                        <Button x:Name="injectCp" Content="Inject" HorizontalAlignment="Center" Margin="3" Click="injectCp_Click" />
                    </StackPanel>-->
                    <DataGrid  IsReadOnly="true" AutoGenerateColumns="false" ItemsSource="{Binding Path=Checkpoints}" SelectedValue="{Binding Path=SelectedCheckpoint}">
                        <DataGrid.Columns>
                            <DataGridTextColumn Header=""></DataGridTextColumn>
                            <DataGridTextColumn Header="Level" Binding="{Binding LevelName}" Width="250"></DataGridTextColumn>
                            <DataGridTextColumn Header="Time" Binding="{Binding GameTime}" Width="75"></DataGridTextColumn>
                            <DataGridTextColumn Header="File" Binding="{Binding Filename}" Width="150"></DataGridTextColumn>
                        </DataGrid.Columns>
                    </DataGrid>
                </DockPanel>
            </TabItem>
            <TabItem Header="Progression Data">
                <DockPanel>
                    <DockPanel DockPanel.Dock="Bottom">
                        <StackPanel DockPanel.Dock="Left" Orientation="Horizontal" VerticalAlignment="Center">
                            <Button Content="Save to File" Margin="2" Click="saveProgression_Click"></Button>
                            <Button Content="Load from File" Margin="2" Click="loadProgression_Click"></Button>
                        </StackPanel>
                        <StackPanel DockPanel.Dock="Right" Orientation="Horizontal" HorizontalAlignment="Right" VerticalAlignment="Center">
                            <!--<CheckBox Content="Auto Refresh" VerticalAlignment="Center"></CheckBox>-->
                            <Button Content="Refresh" Margin="5,0,0,0" Click="refreshPersistence_Click"></Button>
                        </StackPanel>

                    </DockPanel>
                    <DataGrid IsReadOnly="true" AutoGenerateColumns="false" ItemsSource="{Binding Path=PersistenceEntries}">
                        <DataGrid.Columns>
                            <DataGridTextColumn Header="Type" Binding="{Binding DataType}" Width="50"></DataGridTextColumn>
                            <DataGridTextColumn Header="Key Name" Binding="{Binding KeyName}" Width="250"></DataGridTextColumn>
                            <DataGridTextColumn Header="Global Value" Binding="{Binding GlobalValue, Converter={StaticResource HexValConverter}}"></DataGridTextColumn>
                            <DataGridTextColumn Header="Participant Value" Binding="{Binding ParticipantValue, Converter={StaticResource HexValConverter}}"></DataGridTextColumn>
                        </DataGrid.Columns>
                    </DataGrid>
                </DockPanel>
            </TabItem>
            <!--<TabItem Header="Speedrun">
                <StackPanel Orientation="Vertical" VerticalAlignment="Center" HorizontalAlignment="Center">
                    <TextBlock TextAlignment="Center">
                        This sets the current save to act as if it were a post-lights save and quit. 
                        <LineBreak></LineBreak>
                        If you want to reset your run, you should click this button, quit, then continue.
                    </TextBlock>
                    <Button Content="Set Current Save to Post-Lights" Margin="2" Click="speedrunPostLights_Click" Width="200"></Button>
                </StackPanel>
            </TabItem>-->
            <!--<TabItem Header="Level Selection">
                <StackPanel HorizontalAlignment="Center" VerticalAlignment="Center">
                    <TextBlock TextAlignment="Center">
                        This functionality is experimental and not super useful at the moment.
                        <LineBreak></LineBreak>
                        Even if the level is started, progression data will be out of sync
                    </TextBlock>
                    <ComboBox ItemsSource="{Binding Maps}" 
                        DisplayMemberPath="Key" 
                        SelectedValue="{Binding SelectedMap}"  
                        SelectedValuePath="Value"
                        Width="200">
                    </ComboBox>
                    <Button Content="Start Level" Margin="2" Click="startLevel_Click" Width="200"></Button>
                    --><!--<StackPanel Orientation="Horizontal" HorizontalAlignment="center">
                        <TextBox Width="200"></TextBox>
                        <Button Content="Start Level at Spawn" Margin="2"></Button>
                    </StackPanel>--><!--
                </StackPanel>
            </TabItem>-->
        </TabControl>
        
    </DockPanel>

</Window>
